[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "slap-cli"
version = "1.14.2"
description = "Slap is a command-line utility for developing Python applications."
authors = ["Niklas Rosenstein <rosensteinniklas@gmail.com>"]
license = "MIT"
packages = [{ include = "slap", from = "src" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Programming Language :: Python :: 3.10",
]

[tool.poetry.urls]
Documentation = "https://niklasrosenstein.github.io/slap/"
Homepage = "https://github.com/NiklasRosenstein/slap"
Repository = "https://github.com/NiklasRosenstein/slap.git"

[tool.poetry.dependencies]
python = ">=3.13,<3.14"
beautifulsoup4 = "^4.10.0"
cleo = ">=1.0.0a4"
"databind" = "^4.4.0"
flit = "^3.6.0"
poetry-core = ">=1.9,<1.10"
ptyprocess = "^0.7.0"
pygments = "^2.11.2"
PyYAML = ">=6.0"
requests = "^2.27.1"
setuptools = ">=39.1.0"  # Needed for setuptools backend
tomli = "^2.0.0"
tomlkit = "^0.13.0"
twine = "^5.0.0"
tqdm = "^4.64.0"
build = "^1.0.0"
"nr.python.environment" = "^0.1.4"
gitpython = "^3.1.31"
"nr.stream" = "^1.1.5"
uv = "^0.4.0"

[tool.poetry.dev-dependencies]
black = "^24.1.0"
flake8 = "^7.0.0"
isort = "^5.13.1"
mypy = "^1.8.0"
pytest = "^8.0.0"
types-beautifulsoup4 = "^4.10.0"
types-pygments = "^2.9.16"
types-PyYAML = "^6.0.3"
types-requests = "^2.27.7"
types-termcolor = "^1.1.3"

[tool.poetry.scripts]
slap = "slap.__main__:main"

[tool.poetry.plugins."slap.plugins.application"]
add = "slap.ext.application.add:AddCommandPlugin"
changelog = "slap.ext.application.changelog:ChangelogCommandPlugin"
check = "slap.ext.application.check:CheckCommandPlugin"
config = "slap.ext.application.config:SlapConfigCommand"
info = "slap.ext.application.info:InfoCommandPlugin"
init = "slap.ext.application.init:InitCommandPlugin"
install = "slap.ext.application.install:InstallCommandPlugin"
link = "slap.ext.application.link:LinkCommandPlugin"
publish = "slap.ext.application.publish:PublishCommandPlugin"
release = "slap.ext.application.release:ReleaseCommandPlugin"
report = "slap.ext.application.report:ReportPlugin"
run = "slap.ext.application.run:RunCommandPlugin"
test = "slap.ext.application.test:TestCommandPlugin"
venv = "slap.ext.application.venv:VenvPlugin"

[tool.poetry.plugins."slap.plugins.repository_ci"]
github-actions = "slap.ext.repository_ci.github_actions:GithubActionsRepositoryCIPlugin"

[tool.poetry.plugins."slap.plugins.check"]
changelog = "slap.ext.checks.changelog:ChangelogValidationCheckPlugin"
general = "slap.ext.checks.general:GeneralChecksPlugin"
poetry = "slap.ext.checks.poetry:PoetryChecksPlugin"
release = "slap.ext.checks.release:ReleaseChecksPlugin"

[tool.poetry.plugins."slap.plugins.release"]
changelog_release = "slap.ext.release.changelog:ChangelogReleasePlugin"
source_code_version = "slap.ext.release.source_code_version:SourceCodeVersionReferencesPlugin"

[tool.poetry.plugins."slap.plugins.version_incrementing_rule"]
major = "slap.ext.version_incrementing_rule:major"
premajor = "slap.ext.version_incrementing_rule:premajor"
minor = "slap.ext.version_incrementing_rule:minor"
preminor = "slap.ext.version_incrementing_rule:preminor"
patch = "slap.ext.version_incrementing_rule:patch"
prepatch = "slap.ext.version_incrementing_rule:prepatch"
prerelease = "slap.ext.version_incrementing_rule:prerelease"

[tool.poetry.plugins."slap.plugins.project"]
flit = "slap.ext.project_handlers.flit:FlitProjectHandler"
poetry = "slap.ext.project_handlers.poetry:PoetryProjectHandler"
setuptools = "slap.ext.project_handlers.setuptools:SetuptoolsProjectHandler"

[tool.poetry.plugins."slap.plugins.repository"]
default = "slap.ext.repository_handlers.default:DefaultRepositoryHandler"

[tool.poetry.plugins."slap.plugins.repository_host"]
github = "slap.ext.repository_hosts.github:GithubRepositoryHost"

[tool.slap]
typed = true

[tool.slap.test]
mypy   = "dmypy run src"
pytest = "pytest tests/ -vv"
check  = "slap check"
isort  = "isort src/ tests/ --check-only"
black  = "black src/ tests/ --check"
flake8 = "flake8 src/ tests/"

[tool.slap.run]
"docs:install" = "slap venv -c docs --python python3.10 && slap run --use-venv docs -- pip install -r docs/requirements.txt"
"docs:build"   = "slap run --use-venv docs -- bash -xc 'export PATH=\"$(slap venv -p)/bin:${PATH}\" && cd docs && mksync -i docs/changelog.md && mkdocs build'"
"docs:dev"     = "slap run --use-venv docs -- bash -xc 'export PATH=\"$(slap venv -p)/bin:${PATH}\" && cd docs && mksync -i docs/changelog.md && mkdocs serve'"
fmt            = "isort src/ tests/ && black src/ tests"

[tool.mypy]
pretty = true
warn_redundant_casts = true
#warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
show_error_context = true
show_error_codes = true
namespace_packages = true
exclude = "src/slap/templates/.*"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
combine_as_imports = true
